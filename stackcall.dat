//Traza de llamadas de la función 'pseudocompleto()' para el siguiente árbol:

#
a b c d e f # # g # # h # # i j k # # l # # # # n m o p # # # # #



//Call 1
pseudocompleto(a)
{
    profundidadNodo = 0;
    profundidad >= altura -1 == 0 >= 4 == false

    alturaHIzq = 4;
    alturaHDer = 3;
    alturaHIzq > alturaHDer +1 == 4 > 4 == false
    alturaHDer > alturaHIzq +1 == 3 > 5 == false

    //pseudocompleto(b) && pseudocompleto(n)
    //después de llamadas 2 a 12, return true
}

//Call 2
pseudocompleto(b)
{
    profundidadNodo = 1;
    profundidad >= altura -1 ==  1 >= 4 == false

    alturaHIzq = 3
    alturaHDer = -1
    alturaHIzq > alturaHDer +1 ==  3 > 0 == true

    //pseudocompleto(c)
        //después de llamadas 3 a 8, return true
}

//Call 3
pseudocompleto(c)
{
    profundidadNodo = 2;
    profundidad >= altura -1  ==  2 >= 4  == false 

    alturaHIzq = 2
    alturaHDer = 2
    alturaHIzq > alturaHDer +1  ==  2 >= 3  ==  false
    alturaHDer > alturaHIzq +1  ==  2 >= 3  ==  false

    //pseudocompleto(d) && pseudocompleto(i)
        //después de llamadas 4 a 8, return true
}

//Call 4
pseudocompleto(d)
{
    profundidadNodo = 3;
    profundidad >= altura -1  ==  3 >= 4  ==  false

    alturaHIzq = 1
    alturaHDer = 0
    alturaHIzq > alturaHDer +1  ==  1 > 1  ==  false
    alturaHDer > alturaHIzq +1  ==  0 > 2  ==  false

    //pseudocompleto(e) && pseudocompleto(h)
        //después de llamadas 5 y 6, return true
}

//Call 5
pseudocompleto(e)
{
    profundidadNodo = 4;
    profundidad >= altura -1  ==  4  >= 4  ==  true
        esNodoPseudocompleto  ==  true

    //return true
}

//Call 6
pseudocompleto(h)
{
    profundidadNodo = 4;
    profundidad >= altura -1  ==  4 >= 4  ==  true
        esNodoPseudocompleto  ==  true

    //return true
}

//Call 7
pseudocompleto(i)
{
    profundidadNodo = 3;
    profundidad >= altura -1  ==  3 >= 4  ==  false

    alturaHIzq = 4
    alturaHDer = -1
    alturaHIzq > alturaHDer +1  ==  4 > 0  ==  true

    //return pseudocompleto(j)
        //después de llamada 8, return true
}

//Call 8
pseudocompleto(j)
{
    profundidadNodo = 4;
    profundidad >= altura -1  ==  4 >= 4  ==  true
        esNodoPseudocompleto  ==  true

    //return true
}

//Call 9
pseudocompleto(n)
{
    profundidadNodo = 1;
    profundidad >= altura -1  ==  1 >= 4  ==  false

    alturaHIzq = 2
    alturaHDer = -1
    alturaHIzq > alturaHDer +1  ==  2 > 0  ==  true

    //return pseudocompleto(m)
    //después de llamada 10, return true
}

//Call 10
pseudocompleto(m)
{
    profundidadNodo = 2;
    profundidad >= altura -1  ==  2 >= 4  ==  false

    alturaHIzq = 1
    alturaHDer = -1
    alturaHIzq > alturaHDer +1  ==  1 > 0  ==  true

    //return pseudocompleto(o)
    //después de llamada 11, return true
}

//Call 11
pseudocompleto(o)
{
    profundidadNodo = 3;
    profundidad >= altura -1  ==  3 >= 4  ==  false

    alturaHIzq = 0
    alturaHDer = -1
    alturaHIzq > alturaHDer +1  ==  0 > 0  ==  false
    alturaHDer > alturaHIzq +1  ==  -1 > 1  ==  false

    //return pseudocompleto(p) && error (acceso a nodo no existente)
    //una vez corregido:
        //return pseudocompleto(p)
    //después de llamada 12, return true
}

//Call 12
pseudocompleto(p)
{
    profundidadNodo = 4;
    profundidad >= altura -1  ==  4 >= 4  ==  true
        esNodoPseudocompleto  ==  true

    alturaHIzq = 2
    alturaHDer = -1
    alturaHIzq > alturaHDer +1  ==  2 > 0  ==  true

    //return true
}